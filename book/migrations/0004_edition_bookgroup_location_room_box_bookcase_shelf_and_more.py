# Generated by Django 5.1.3 on 2024-11-25 01:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('book', '0003_auto_20211119_1854'),
    ]

    operations = [
        migrations.CreateModel(
            name='Edition',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('publisher', models.CharField(max_length=100)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('language', models.CharField(default='eng', max_length=50)),
                ('format', models.CharField(choices=[('HARDCOVER', 'Hardcover'), ('PAPERBACK', 'Paperback'), ('EBOOK', 'E-Book'), ('AUDIO', 'Audiobook')], max_length=20)),
                ('page_count', models.IntegerField(blank=True, null=True)),
                ('dimensions', models.CharField(blank=True, max_length=100, null=True)),
                ('isbn', models.CharField(blank=True, max_length=13, null=True, unique=True)),
                ('olid', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookGroup',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('organization_scheme', models.CharField(choices=[('ALPHA_AUTHOR', 'Alphabetical by Author'), ('ALPHA_TITLE', 'Alphabetical by Title'), ('PUB_DATE', 'By Publication Date'), ('GENRE', 'By Genre'), ('SERIES', 'By Series'), ('CUSTOM', 'Custom Organization')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'indexes': [models.Index(fields=['name'], name='book_bookgr_name_2b99a9_idx'), models.Index(fields=['organization_scheme'], name='book_bookgr_organiz_205a49_idx')],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField(blank=True)),
                ('type', models.CharField(choices=[('HOUSE', 'House'), ('STORAGE', 'Storage Unit'), ('CABIN', 'Cabin'), ('OFFICE', 'Office'), ('OTHER', 'Other')], max_length=20)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'indexes': [models.Index(fields=['name'], name='book_locati_name_3a4a41_idx'), models.Index(fields=['type'], name='book_locati_type_b907b1_idx')],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('BEDROOM', 'Bedroom'), ('LIVING', 'Living Room'), ('OFFICE', 'Office/Study'), ('LIBRARY', 'Library'), ('STORAGE', 'Storage Room'), ('BASEMENT', 'Basement'), ('ATTIC', 'Attic'), ('OTHER', 'Other')], max_length=20)),
                ('floor', models.IntegerField(default=1)),
                ('notes', models.TextField(blank=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book.location')),
            ],
        ),
        migrations.CreateModel(
            name='Box',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('dimensions', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('SEALED', 'Sealed'), ('UNSEALED', 'Unsealed')], default='UNSEALED', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('book_groups', models.ManyToManyField(blank=True, to='book.bookgroup')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='book.location')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='book.room')),
            ],
        ),
        migrations.CreateModel(
            name='Bookcase',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('shelf_count', models.PositiveIntegerField()),
                ('notes', models.TextField(blank=True)),
                ('book_groups', models.ManyToManyField(blank=True, to='book.bookgroup')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='book.location')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='book.room')),
            ],
        ),
        migrations.CreateModel(
            name='Shelf',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('position', models.PositiveIntegerField()),
                ('notes', models.TextField(blank=True)),
                ('book_groups', models.ManyToManyField(blank=True, to='book.bookgroup')),
                ('bookcase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book.bookcase')),
            ],
            options={
                'ordering': ['bookcase', 'position'],
            },
        ),
        migrations.CreateModel(
            name='Copy',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('condition', models.CharField(choices=[('NEW', 'New'), ('LIKE_NEW', 'Like New'), ('VERY_GOOD', 'Very Good'), ('GOOD', 'Good'), ('FAIR', 'Fair'), ('POOR', 'Poor')], max_length=20)),
                ('acquisition_date', models.DateField(blank=True, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True)),
                ('bookcase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='book.bookcase')),
                ('box', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='book.box')),
                ('edition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book.edition')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='book.location')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='book.room')),
                ('shelf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='book.shelf')),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('original_publication_date', models.DateField(blank=True, null=True)),
                ('type', models.CharField(choices=[('NOVEL', 'Novel'), ('SHORT_STORY', 'Short Story'), ('ANTHOLOGY', 'Anthology'), ('COLLECTION', 'Collection')], max_length=20)),
                ('search_name', models.CharField(blank=True, max_length=100, null=True)),
                ('olid', models.CharField(max_length=100)),
                ('authors', models.ManyToManyField(to='book.author')),
                ('component_works', models.ManyToManyField(blank=True, related_name='contained_in', to='book.work')),
            ],
        ),
        migrations.AddField(
            model_name='edition',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book.work'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['location', 'name'], name='book_room_locatio_015eb6_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['type'], name='book_room_type_2c0346_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='room',
            unique_together={('location', 'name')},
        ),
        migrations.AddIndex(
            model_name='box',
            index=models.Index(fields=['location'], name='book_box_locatio_83070f_idx'),
        ),
        migrations.AddIndex(
            model_name='box',
            index=models.Index(fields=['room'], name='book_box_room_id_927f08_idx'),
        ),
        migrations.AddIndex(
            model_name='box',
            index=models.Index(fields=['name'], name='book_box_name_06f87d_idx'),
        ),
        migrations.AddIndex(
            model_name='box',
            index=models.Index(fields=['status'], name='book_box_status_2046d4_idx'),
        ),
        migrations.AddConstraint(
            model_name='box',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('location__isnull', False), ('room__isnull', True)), models.Q(('location__isnull', True), ('room__isnull', False)), _connector='OR'), name='box_single_parent'),
        ),
        migrations.AddIndex(
            model_name='bookcase',
            index=models.Index(fields=['location'], name='book_bookca_locatio_46eec4_idx'),
        ),
        migrations.AddIndex(
            model_name='bookcase',
            index=models.Index(fields=['room'], name='book_bookca_room_id_8da7fb_idx'),
        ),
        migrations.AddIndex(
            model_name='bookcase',
            index=models.Index(fields=['name'], name='book_bookca_name_860859_idx'),
        ),
        migrations.AddConstraint(
            model_name='bookcase',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('location__isnull', False), ('room__isnull', True)), models.Q(('location__isnull', True), ('room__isnull', False)), _connector='OR'), name='bookcase_single_parent'),
        ),
        migrations.AddIndex(
            model_name='shelf',
            index=models.Index(fields=['bookcase', 'position'], name='book_shelf_bookcas_128335_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='shelf',
            unique_together={('bookcase', 'position')},
        ),
        migrations.AddIndex(
            model_name='copy',
            index=models.Index(fields=['edition'], name='book_copy_edition_276fb8_idx'),
        ),
        migrations.AddIndex(
            model_name='copy',
            index=models.Index(fields=['location'], name='book_copy_locatio_3a34ae_idx'),
        ),
        migrations.AddIndex(
            model_name='copy',
            index=models.Index(fields=['box'], name='book_copy_box_id_ec4f37_idx'),
        ),
        migrations.AddIndex(
            model_name='work',
            index=models.Index(fields=['title'], name='book_work_title_fa43e9_idx'),
        ),
        migrations.AddIndex(
            model_name='work',
            index=models.Index(fields=['olid'], name='book_work_olid_861404_idx'),
        ),
        migrations.AddIndex(
            model_name='edition',
            index=models.Index(fields=['isbn'], name='book_editio_isbn_a4a553_idx'),
        ),
        migrations.AddIndex(
            model_name='edition',
            index=models.Index(fields=['olid'], name='book_editio_olid_7afce0_idx'),
        ),
        migrations.AddIndex(
            model_name='edition',
            index=models.Index(fields=['work', 'publisher', 'publication_date'], name='book_editio_work_id_271735_idx'),
        ),
    ]
